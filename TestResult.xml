<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="C:\ws\TinyJson\TinyJson.Test\bin\debug\TinyJson.Test.dll" total="29" errors="0" failures="1" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2012-11-29" time="13:23:18">
  <environment nunit-version="2.6.2.12296" clr-version="2.0.50727.4961" os-version="Microsoft Windows NT 6.1.7600.0" platform="Win32NT" cwd="C:\ws\TinyJson" machine-name="DBPC" user="dusty.burwell" user-domain="dbpc" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="Assembly" name="C:\ws\TinyJson\TinyJson.Test\bin\debug\TinyJson.Test.dll" executed="True" result="Failure" success="False" time="1.484" asserts="0">
    <results>
      <test-suite type="Namespace" name="TinyJson" executed="True" result="Failure" success="False" time="1.406" asserts="0">
        <results>
          <test-suite type="Namespace" name="Test" executed="True" result="Failure" success="False" time="1.406" asserts="0">
            <results>
              <test-suite type="TestFixture" name="ErrorTests" executed="True" result="Failure" success="False" time="1.250" asserts="0">
                <results>
                  <test-case name="TinyJson.Test.ErrorTests.NotAValue" executed="True" result="Failure" success="False" time="1.125" asserts="0">
                    <failure>
                      <message><![CDATA[Expected TinyJson.Json+ParseException, but no exception was thrown.]]></message>
                      <stack-trace><![CDATA[at FluentAssertions.Execution.LateBoundTestFramework.Throw(String message) in c:\Workspaces\codeplex\fluentassertions\Main\FluentAssertions.Net35\Execution\LateBoundTestFramework.cs:line 20
at FluentAssertions.Execution.Verification.FailWith(String failureMessage, Object[] failureArgs) in c:\Workspaces\codeplex\fluentassertions\Main\FluentAssertions.Net35\Execution\Verification.cs:line 160
at FluentAssertions.Specialized.ActionAssertions.ShouldThrow[TException](String reason, Object[] reasonArgs) in c:\Workspaces\codeplex\fluentassertions\Main\FluentAssertions.Net35\Specialized\ActionAssertions.cs:line 47
at TinyJson.Test.ErrorTests.NotAValue() in c:\ws\TinyJson\TinyJson.Test\ErrorTests.cs:line 33
]]></stack-trace>
                    </failure>
                  </test-case>
                  <test-case name="TinyJson.Test.ErrorTests.UnClosedArray" executed="True" result="Success" success="True" time="0.031" asserts="0" />
                  <test-case name="TinyJson.Test.ErrorTests.UnClosedObject" executed="True" result="Success" success="True" time="0.031" asserts="0" />
                  <test-case name="TinyJson.Test.ErrorTests.UnClosedString" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ParserTest" executed="True" result="Success" success="True" time="0.094" asserts="0">
                <results>
                  <test-case name="TinyJson.Test.ParserTest.ArrayOfArrays" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="TinyJson.Test.ParserTest.ArrayOfBool" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="TinyJson.Test.ParserTest.ArrayOfNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="TinyJson.Test.ParserTest.ArrayOfNumbers" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="TinyJson.Test.ParserTest.ArrayOfStrings" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                  <test-case name="TinyJson.Test.ParserTest.ArrayWithWhitespace" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="TinyJson.Test.ParserTest.EmptyIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="TinyJson.Test.ParserTest.EmptyObject" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                  <test-case name="TinyJson.Test.ParserTest.False" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="TinyJson.Test.ParserTest.MixedArray" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="TinyJson.Test.ParserTest.NestedObject" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="TinyJson.Test.ParserTest.Null" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="TinyJson.Test.ParserTest.Number" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="TinyJson.Test.ParserTest.NumberWithWhitespace" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="TinyJson.Test.ParserTest.Object" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="TinyJson.Test.ParserTest.ObjectWithWhitespace" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="TinyJson.Test.ParserTest.Property" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="TinyJson.Test.ParserTest.String" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="TinyJson.Test.ParserTest.StringWithWhitespace" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="TinyJson.Test.ParserTest.True" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="QueryTests" executed="True" result="Success" success="True" time="0.047" asserts="0">
                <results>
                  <test-case name="TinyJson.Test.QueryTests.IndexOneLevelDeep" executed="True" result="Success" success="True" time="0.031" asserts="0" />
                  <test-case name="TinyJson.Test.QueryTests.IndexTwoLevelsDeep" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="TinyJson.Test.QueryTests.IndexTwoLevelsDeepWithArrayIndex" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="TinyJson.Test.QueryTests.IndexTwoLevelsDeepWithArrayIndex2" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="TinyJson.Test.QueryTests.IndexWithArrayIndex" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>